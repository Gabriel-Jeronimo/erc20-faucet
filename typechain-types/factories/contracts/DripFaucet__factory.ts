/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DripFaucet,
  DripFaucetInterface,
} from "../../contracts/DripFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_buyTimeLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "requestTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161068638038061068683398181016040528101906100329190610117565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160a081815250508060c0818152505050505061016a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ae82610083565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000819050919050565b6100f4816100e1565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b6000806000606084860312156101305761012f61007e565b5b600061013e868287016100cc565b935050602061014f86828701610102565b925050604061016086828701610102565b9150509250925092565b60805160a05160c0516104ed61019960003960006101d60152600061012b0152600061019901526104ed6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063359cf2b714610030575b600080fd5b61003861003a565b005b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036100a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a0906102b5565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211610129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012090610347565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004261015591906103a0565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610212929190610424565b6020604051808303816000875af1158015610231573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610255919061048a565b50565b600082825260208201905092915050565b7f49742073686f756c6420626520612076616c6964206164647265737300000000600082015250565b600061029f601c83610258565b91506102aa82610269565b602082019050919050565b600060208201905081810360008301526102ce81610292565b9050919050565b7f596f7572206e65787420726571756573742074696d65206973206e6f7420726560008201527f6163686564207965740000000000000000000000000000000000000000000000602082015250565b6000610331602983610258565b915061033c826102d5565b604082019050919050565b6000602082019050818103600083015261036081610324565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103ab82610367565b91506103b683610367565b92508282019050808211156103ce576103cd610371565b5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ff826103d4565b9050919050565b61040f816103f4565b82525050565b61041e81610367565b82525050565b60006040820190506104396000830185610406565b6104466020830184610415565b9392505050565b600080fd5b60008115159050919050565b61046781610452565b811461047257600080fd5b50565b6000815190506104848161045e565b92915050565b6000602082840312156104a05761049f61044d565b5b60006104ae84828501610475565b9150509291505056fea2646970667358221220e539bcfa699950bfed50c45b0f5c4aaade8ab2e1ea8f5fb6aa2c3f4afd4a153c64736f6c63430008140033";

type DripFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DripFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DripFaucet__factory extends ContractFactory {
  constructor(...args: DripFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    _buyTimeLimit: BigNumberish,
    _faucetValue: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      tokenAddress,
      _buyTimeLimit,
      _faucetValue,
      overrides || {}
    );
  }
  override deploy(
    tokenAddress: AddressLike,
    _buyTimeLimit: BigNumberish,
    _faucetValue: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      tokenAddress,
      _buyTimeLimit,
      _faucetValue,
      overrides || {}
    ) as Promise<
      DripFaucet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DripFaucet__factory {
    return super.connect(runner) as DripFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DripFaucetInterface {
    return new Interface(_abi) as DripFaucetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DripFaucet {
    return new Contract(address, _abi, runner) as unknown as DripFaucet;
  }
}
